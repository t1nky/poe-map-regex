---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html
  lang="en"
  class="h-full"
  x-data="{darkMode: localStorage.getItem('darkMode')}"
  x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))"
  x-bind:data-theme="darkMode"
>
  <head>
    <script is:inline>
      if (localStorage.getItem('darkMode') === 'dark') {
        document.querySelector('html').dataset.theme = 'dark';
      }

      if (localStorage.getItem('darkMode') === 'light') {
        document.querySelector('html').dataset.theme = 'light';
      }

      if (!localStorage.getItem('darkMode')) {
        let theme = window.matchMedia('(prefers-color-scheme: dark)') ? 'dark' : 'light';

        localStorage.setItem('darkMode', theme);
      }
    </script>

    <meta charset="UTF-8" />
    <meta name="description" content="Build short regex for map mods in Path of Exile" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/poe-map-regex/favicon.svg" />
    <link rel="icon" type="image/png" href="/poe-map-regex/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="h-full">
    <slot />
  </body>
</html>

<style is:global>
  html {
    font-family: system-ui, sans-serif;
  }
</style>
